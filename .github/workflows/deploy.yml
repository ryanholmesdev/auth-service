name: Docker Compose CI

on:
  push:
    branches:
      - master  # Runs on push to master

  pull_request:
    branches:
      - master  # Runs on PRs targeting master

jobs:

  # Step 1: Run Tests with Coverage Check
  run-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.22

      - name: Install dependencies
        run: go mod tidy

      - name: Run tests with coverage
        run: |
          go test ./... -coverprofile=coverage.out -v

      - name: Check coverage threshold (10%)
        run: |
          coverage=$(go tool cover -func=coverage.out | grep total | awk '{print substr($3, 1, length($3)-1)}')
          echo "Total coverage: $coverage%"
          min_coverage=10.0
          if (( $(echo "$coverage < $min_coverage" | bc -l) )); then
            echo "ERROR: Code coverage $coverage% is below the minimum threshold of $min_coverage%"
            exit 1
          else
            echo "Code coverage $coverage% meets the minimum threshold of $min_coverage%"
          fi

      - name: Upload coverage report (optional)
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage.out

  # Step 2: Build and Deploy (runs only if tests pass)
  build-and-deploy:
    runs-on: self-hosted

    needs: run-tests

    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Set up Docker Compose
        run: |
          docker-compose down || true  # Stop existing containers
          docker-compose up --build -d  # Build and start containers

      - name: Set APP_ENV to dev
        run: echo "APP_ENV=dev"

      - name: Health Check
        run: |
          curl --fail http://localhost:8080/swagger/ || exit 1