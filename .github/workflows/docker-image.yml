name: Docker Compose CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-test-and-deploy:
    runs-on: self-hosted  # Use your mini PC runner

    services:
      redis:
        image: redis:alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      # Step 1: Checkout the code
      - uses: actions/checkout@v4

      # Step 2: Set up Go
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.21  # Adjust to your Go version

      # Step 3: Install dependencies
      - name: Install dependencies
        run: go mod download

      # Step 4: Run Go tests with coverage
      - name: Run Go Tests with Coverage
        env:
          REDIS_HOST: localhost
          REDIS_PORT: 6379
          ALLOWED_REDIRECT_DOMAINS: localhost,127.0.0.1
        run: |
          go test ./... -v -coverprofile=coverage.out -covermode=atomic

      # Step 5: Enforce 80% Code Coverage
      - name: Enforce 80% Code Coverage
        run: |
          coverage=$(go tool cover -func=coverage.out | grep total | awk '{print substr($3, 1, length($3)-1)}')
          echo "Current Coverage: $coverage%"
          threshold=80.0
          if (( $(echo "$coverage < $threshold" | bc -l) )); then
            echo "Code coverage ($coverage%) is below the threshold ($threshold%) ❌"
            exit 1
          else
            echo "Code coverage ($coverage%) meets the threshold ($threshold%) ✅"
          fi

      # Step 6: Upload test coverage report
      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.out

      # Step 7: Set up Docker Compose
      - name: Set up Docker Compose
        run: |
          docker-compose down || true  # Stop any existing containers
          docker-compose up --build -d  # Build and start containers in detached mode

      # Step 8: Set APP_ENV to dev
      - name: Set APP_ENV to dev
        run: echo "APP_ENV=dev"

      # Step 9: Health Check
      - name: Health Check
        run: |
          curl --fail http://localhost:8080/swagger/ || exit 1