openapi: 3.0.0
info:
  title: Auth Service API
  version: 1.0.0
  description: API for managing OAuth tokens and authentication.

servers:
  - url: http://localhost:8080

paths:
  /auth/{provider}/login:
    get:
      summary: Redirect to the provider's OAuth login page.
      parameters:
        - name: provider
          in: path
          required: true
          schema:
            type: string
        - name: redirect_uri
          in: query
          required: true
          schema:
            type: string
          description: The URI to redirect the user to after authentication.
      responses:
        '302':
          description: Redirects the user to the OAuth provider login page.

  /auth/{provider}/callback:
    get:
      summary: Handle OAuth callback and store tokens.
      parameters:
        - name: provider
          in: path
          required: true
          schema:
            type: string
        - name: state
          in: query
          required: true
          schema:
            type: string
          description: The state parameter containing redirect URI and anti-CSRF token.
      responses:
        '200':
          description: Successfully authenticated.

  /auth/{provider}/token:
    get:
      summary: Retrieve an OAuth token for a specific provider and user.
      parameters:
        - name: provider
          in: path
          required: true
          schema:
            type: string
        - name: user_id
          in: query
          required: true
          schema:
            type: string
          description: The unique identifier of the user for whom the token is being retrieved.
      responses:
        '200':
          description: Returns the OAuth token for the specified provider and user.
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    example: "mock-access-token-1"
                  expires_in:
                    type: integer
                    example: 3600
                  refresh_token:
                    type: string
                    example: "mock-refresh-token-1"
        '400':
          description: Bad request, missing session ID or user ID.
        '401':
          description: Unauthorized access.
        '404':
          description: Token not found for the specified provider and user.

  /auth/{provider}/logout:
    post:
      summary: Log out the user and invalidate the session.
      description: Clears the user's session and removes the OAuth token from Redis.
      parameters:
        - name: provider
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully logged out.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Successfully logged out.
        '400':
          description: Bad request, missing session ID.
        '401':
          description: Unauthorized, session not found.
  /auth/status:
    get:
      summary: Retrieve a list of connected providers that the user is logged in with
      responses:
        '200':
          description: List of connected providers.
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: boolean
                example:
                  spotify: true
                  tidal: false
        '400':
          description: Bad request, missing session ID.
        '401':
          description: Unauthorized access.